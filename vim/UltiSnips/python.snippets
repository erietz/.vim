snippet modules-math "import math modules" b
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
endsnippet

snippet modules-script "import scripting modules" b
from pathlib import Path
import re
import subprocess
import sys
endsnippet

snippet shebang "shebang" b
#!/usr/bin/env python3
$0
endsnippet

snippet slurm "slurm job" b
#!/usr/bin/env python3
#SBATCH --nodes=1
#SBATCH --ntasks-per-node=32
#SBATCH --mem=20gb
#SBATCH --time=${1:0-00:20:00}
#SBATCH --job-name=${2:jobname}
${3:#SBATCH --mail-user=ewrietz@iu.edu}
${4:#SBATCH --mail-type=FAIL,BEGIN,END}

$0

endsnippet

snippet pbs "pbs job" b
#!/usr/bin/env zsh
#PBS -l nodes=1:ppn=32
#PBS -l vmem=20gb
#PBS -l walltime=${1:0-00:20:00}
#PBS -N ${2:jobname}
${3:#PBS -M ewrietz@iu.edu}
${4:#PBS -m abe}

$0

endsnippet

snippet delim "Insert jupyter delimeter" b
# In[$1]:

$0
endsnippet

global !p
def get_args(line: str):
  args = []
  for arg in map(lambda x: x.lstrip(), line.split(',')):
    temp = arg.split(':')
    attr, anno = (temp[0], temp[1].lstrip()) if len(temp) > 1 else (temp[0], None)
    args.append((attr, anno))
  return args
endglobal

snippet cl "class ..." b
class $1:
    """$2"""

    def __init__(self, $3):`!p
snip >> 2
for arg in get_args(t[3]):
  snip += f"self.{arg[0]} = {arg[0]}"`$0
endsnippet
